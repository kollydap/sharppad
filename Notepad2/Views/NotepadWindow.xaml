<Window x:Class="SharpPad.Views.NotepadWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ap="clr-namespace:SharpPad.AttachedProperties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:fileExplorerShell="clr-namespace:SharpPad.FileExplorer.ShellClasses"
        xmlns:converters="clr-namespace:SharpPad.Converters"
        xmlns:se="clr-namespace:SharpPad.SimpleEditor"
        xmlns:notepad="clr-namespace:SharpPad.Notepad"
        xmlns:history="clr-namespace:SharpPad.History"
        xmlns:informationstuff="clr-namespace:SharpPad.InformationStuff"
        xmlns:viewmodels="clr-namespace:SharpPad.ViewModels"
        mc:Ignorable="d"
        Closing="Window_Closing"
        GotFocus="Window_GotFocus"
        WindowStartupLocation="CenterScreen"
        Style="{DynamicResource CustomWindowStyle}"
        BorderBrush="{DynamicResource ControlDefaultBackground}"
        MinHeight="535" 
        MinWidth="875"
        Height="576" 
        Width="900"
        Icon="/SharpPad;component/Resources/sharpPadIcon.ico"
        Title="SharpPad">
    <!-- 
        Not separating large chunks of the UI into smaller usercontrols 
        mainly because i prefer not to because it's sort of easier and 
        somehow "cleaner"/easier to access things.
    -->
    <!--
    // using for testing
    <Window.DataContext>
        <viewmodels:NotepadViewModel/>
    </Window.DataContext>
    -->
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:FileExtensionNameConverter x:Key="FileExtensionNameConverter"/>
        <converters:LeftPaneOpenedToImageSourceConverter x:Key="LeftPaneOpenedToImageSourceConverter"/>
        <converters:TopPaneOpenedToImageSourceConverter x:Key="TopPaneOpenedToImageSourceConverter"/>
        <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <converters:InvertedBoolToVisibilityConverter x:Key="invertedBoolToVis"/>
        <DropShadowBitmapEffect x:Key="NormalShadow" ShadowDepth="2" Softness="0.2" Opacity="0.64"/>
        <ObjectDataProvider x:Key="FontFamilyOptions" ObjectType="{x:Type Fonts}" MethodName="get_SystemFontFamilies"/>
        <converters:TextToFontDecorationConverter x:Key="textDecoConverter"/>
        <x:Array x:Key="FontSizeOptions" Type="{x:Type sys:Double}">
            <sys:Double>2</sys:Double>
            <sys:Double>4</sys:Double>
            <sys:Double>6</sys:Double>
            <sys:Double>8</sys:Double>
            <sys:Double>10</sys:Double>
            <sys:Double>11</sys:Double>
            <sys:Double>12</sys:Double>
            <sys:Double>13</sys:Double>
            <sys:Double>14</sys:Double>
            <sys:Double>15</sys:Double>
            <sys:Double>16</sys:Double>
            <sys:Double>18</sys:Double>
            <sys:Double>20</sys:Double>
            <sys:Double>24</sys:Double>
            <sys:Double>32</sys:Double>
            <sys:Double>36</sys:Double>
            <sys:Double>40</sys:Double>
            <sys:Double>48</sys:Double>
            <sys:Double>64</sys:Double>
            <sys:Double>72</sys:Double>
            <sys:Double>100</sys:Double>
            <sys:Double>144</sys:Double>
        </x:Array>
        <x:Array x:Key="FontWeightOptions" Type="{x:Type FontWeight}">
            <FontWeight>Normal</FontWeight>
            <FontWeight>Bold</FontWeight>
            <FontWeight>ExtraBold</FontWeight>
        </x:Array>
        <x:Array x:Key="FontStyleOptions" Type="{x:Type FontStyle}">
            <FontStyle>Normal</FontStyle>
            <FontStyle>Italic</FontStyle>
            <FontStyle>Oblique</FontStyle>
        </x:Array>
        <x:Array x:Key="TextDeocrationOptions" Type="{x:Type sys:String}">
            <sys:String>None</sys:String>
            <sys:String>Underline</sys:String>
            <sys:String>Strikethrough</sys:String>
            <sys:String>OverLine</sys:String>
            <sys:String>Baseline</sys:String>
        </x:Array>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding CloseViewWithCheckCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding ShowFindWindowCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="W" Command="{Binding CloseWindowCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="T" Command="{Binding NewWindowCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="R" Command="{Binding History.ReopenLastFileCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl" Key="Delete" Command="{Binding CloseSelectedNotepadCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="N" Command="{Binding OpenSelectedInNewWindowCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="T" Command="{Binding ReopenLastWindowCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding SaveAllCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="O" Command="{Binding OpenDirectoryCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="W" Command="{Binding CloseAllWindowsCommand, Mode=OneTime}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="R" Command="{Binding FocusAndRenameFileCommand, Mode=OneTime}"/>
    </Window.InputBindings>
    <Grid Background="{DynamicResource BackgroundColour}">
        <Menu VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="{DynamicResource BackgroundColour}">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="{Binding NewCommand, Mode=OneTime}" ToolTip="Add a new Notepad item" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + N">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/newFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="New Window" Command="{Binding NewWindowCommand, Mode=OneTime}" ToolTip="Open a new window" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + T">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/openInNewWindow.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open" Command="{Binding OpenCommand, Mode=OneTime}" ToolTip="Open a file" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + O">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/openFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open Folder" Command="{Binding OpenDirectoryCommand, Mode=OneTime}" ToolTip="Open every file in a folder" InputGestureText="Ctrl Shift + O" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/openFolder.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save" Command="{Binding SaveCommand, Mode=OneTime}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + S">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/saveFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save as..." Command="{Binding SaveAsCommand, Mode=OneTime}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/saveFileAs.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save all" Command="{Binding SaveAllCommand, Mode=OneTime}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + Shift + S">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/saveAll.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}" />
                <MenuItem Header="Close Selected Notepad" Command="{Binding CloseSelectedNotepadCommand, Mode=OneTime}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" InputGestureText="Ctrl + Delete" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/closeFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}" />
                <MenuItem Header="Clear Temp Unsaved files" ToolTip="Clear the folder which contains files that have not been saved yet (in MyDocuments). This is normally done automatically when they're opened." ToolTipService.ShowDuration="10000" Template="{DynamicResource SingleDropDownMenuItem}" Click="MenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/binCan.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Preferences..." ToolTip="Show a window containing preferences you can edit" Command="{Binding ShowPreferencesViewCommand, Mode=OneTime}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/preferencesIcon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Theme">
                <MenuItem Header="Light" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="0">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF848484" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Colourful Light" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="1">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF2C7FF5" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Dark" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="2">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF404040" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Colourful Dark" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="3">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF2C7FF5" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Windows">
                <MenuItem Header="Close this window" Command="{Binding CloseWindowCommand, Mode=OneTime}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <TextBlock Text="X" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFE82020"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Re-open last window" Command="{Binding ReopenLastWindowCommand, Mode=OneTime}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Grid Width="12" Height="12">
                            <Rectangle StrokeThickness="1" 
                                       Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                                       Stroke="{DynamicResource ControlGlythColour}"
                                       Margin="3,0,0,3"/>
                            <Rectangle StrokeThickness="1" 
                                       Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                                       Stroke="{DynamicResource ControlGlythColour}"
                                       Margin="0 3 3 0"/>
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                <MenuItem Header="Set resolution to 576p" Click="ChangeResolutionClick" Uid="0" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set resolution to 648p" Click="ChangeResolutionClick" Uid="1" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set resolution to 720p" Click="ChangeResolutionClick" Uid="2" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set resolution to 960p" Click="ChangeResolutionClick" Uid="3" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set to recommended resolution" Click="ChangeResolutionClick" Uid="4" Template="{DynamicResource SingleDropDownMenuItem}"/>
            </MenuItem>
            <MenuItem Header="About" Cursor="Help" Command="{Binding ShowHelpCommand, Mode=OneTime}"/>
        </Menu>
        <DockPanel Margin="5,18,5,5" Background="{DynamicResource BackgroundColour}">
            <StackPanel DockPanel.Dock="Top" Background="{DynamicResource BackgroundColour}">
                <DockPanel RenderOptions.BitmapScalingMode="HighQuality" HorizontalAlignment="Stretch" Height="28">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" DockPanel.Dock="Left" >
                        <Button Command="{Binding NewCommand, Mode=OneTime}" ToolTip="Add New Blank File (Ctrl + N)" 
                                BorderBrush="Transparent" Background="Transparent" VerticalAlignment="Center"
                                Focusable="False" Width="28" Height="28" Margin="0 0 2 0">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Width" />
                                            <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Height" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Width" />
                                            <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Height" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                            <Image Margin="1" Source="/SharpPad;component/Resources/newFile.png"/>
                        </Button>
                        <Button Command="{Binding OpenCommand, Mode=OneTime}" ToolTip="Open File from File Explorer (Ctrl + O)"
                                BorderBrush="Transparent" Background="Transparent" 
                                Focusable="False" Width="28" Margin="0 0 2 0">
                            <Image Margin="1" Source="/SharpPad;component/Resources/openFile.png"/>
                        </Button>
                        <StackPanel IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Orientation="Horizontal">
                            <Button Command="{Binding SaveCommand, Mode=OneTime}" ToolTip="Save current File (Ctrl + S)" 
                                    BorderBrush="Transparent"  VerticalAlignment="Center"
                                    Background="Transparent" Focusable="False"
                                    Width="28" Height="28" Margin="0 0 2 0">
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Width" />
                                                <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Height" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Width" />
                                                <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Height" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>
                                <Image Margin="1" Source="/SharpPad;component/Resources/saveFile.png"/>
                            </Button>
                            <Button Command="{Binding SaveAsCommand, Mode=OneTime}" ToolTip="Save current File As..." 
                                    BorderBrush="Transparent" Background="Transparent" Width="28"
                                    Focusable="False" Margin="0 0 2 0">
                                <Image Margin="1" Source="/SharpPad;component/Resources/saveFileAs.png"/>
                            </Button>
                            <Button Command="{Binding SaveAllCommand, Mode=OneTime}" ToolTip="Save every file currently open (Ctrl + Shift + S)"
                                    BorderBrush="Transparent" Background="Transparent" 
                                    Focusable="False" Width="28" Margin="0 0 2 0">
                                <Image Margin="1" Source="/SharpPad;component/Resources/saveAll.png"/>
                            </Button>
                            <Button Command="{Binding CloseSelectedNotepadCommand, Mode=OneTime}" ToolTip="Close current File and Remove (Ctrl + Del when focused on an item)" 
                                    BorderBrush="Transparent" Background="Transparent" 
                                    Focusable="False" Width="28" Margin="0 0 2 0">
                                <Image Margin="1" Source="/SharpPad;component/Resources/closeFile.png"/>
                            </Button>
                            <Button Command="{Binding CloseAllNotepadsCommand, Mode=OneTime}" ToolTip="Close ALL Files and Remove them" 
                                    BorderBrush="Transparent" Background="Transparent" 
                                    Focusable="False" Width="28" Margin="0 0 2 0">
                                <Image Margin="1" Source="/SharpPad;component/Resources/closeAllFiles.png"/>
                            </Button>
                            <Button Command="{Binding PrintFileCommand, Mode=OneTime}" IsEnabled="True" 
                                    BorderBrush="Transparent" Background="Transparent"
                                    ToolTip="Print text" Width="32" Margin="0">
                                <Image Margin="1" Source="/SharpPad;component/Resources/printIcon.png"/>
                            </Button>
                        </StackPanel>
                        <Button Command="{Binding ShowWindowManagerCommand, Mode=OneTime}"
                                IsEnabled="True"
                                BorderBrush="Transparent" Background="Transparent"
                                ToolTip="Window Manager. Containing a list of active and closed windows"
                                Focusable="False" Margin="0" Width="32">
                            <Image Margin="1" Source="/SharpPad;component/Resources/previewWindow.png"/>
                        </Button>
                        <Button Command="{Binding ShowFindWindowCommand, Mode=OneTime}"
                                IsEnabled="True"
                                BorderBrush="Transparent" Background="Transparent"
                                ToolTip="Window Manager. Containing a list of active and closed windows"
                                Focusable="False" Margin="0" Width="32">
                            <Image Margin="1" Source="/SharpPad;component/Resources/findReplace.png"/>
                        </Button>
                    </StackPanel>
                    <Separator Style="{DynamicResource VerticalSeparator}" Width="2"/>
                    <Grid Margin="2,0,0,0">
                        <TextBlock Text="Windows Clipboard:" Padding="4" VerticalAlignment="Center" FontSize="12"
                                   ToolTip="To the right will show whatever is currently in the clipboard" 
                                   Margin="0,0,0,0" HorizontalAlignment="Left" Width="115"/>

                        <!-- Testing out attached properties -->
                        <TextBlock Padding="4"
                                   VerticalAlignment="Center" 
                                   TextTrimming="WordEllipsis" 
                                   TextWrapping="NoWrap"
                                   FontSize="12"
                                   FontFamily="Consolas" 
                                   Margin="115,3,0,3" 
                                   Text="Clipboard is Empty"
                                   Opacity="0.5" Visibility="Collapsed"/>

                        <TextBlock Text="{Binding OurClipboard.ClipboardText, UpdateSourceTrigger=PropertyChanged}"
                                   Padding="4"
                                   VerticalAlignment="Center" 
                                   TextTrimming="WordEllipsis" 
                                   TextWrapping="NoWrap"
                                   FontSize="12"
                                   FontFamily="Consolas"
                                   ToolTip="{Binding OurClipboard.ClipboardText, UpdateSourceTrigger=PropertyChanged}"
                                   ToolTipService.ShowDuration="50000"
                                   MouseDown="OpenClipboardClick"
                                   Cursor="Hand" Margin="115,3,0,3"/>
                    </Grid>
                </DockPanel>
                <StackPanel IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" 
                            Margin="0 5 0 0" Orientation="Horizontal" HorizontalAlignment="Left" Height="28">
                    <ComboBox ItemsSource="{Binding Source={StaticResource FontFamilyOptions}}" 
                              SelectedItem="{Binding Notepad.DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}" 
                              ToolTip="Font" IsEditable="True" SelectedIndex="0" 
                              HorizontalAlignment="Left" Width="155">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontFamily="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox Width="65" 
                              ItemsSource="{Binding Source={StaticResource FontSizeOptions}}"
                              SelectedIndex="9"
                              SelectedItem="{Binding Notepad.DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="Font Size"
                              HorizontalAlignment="Left"
                              Margin="5 0 0 0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox ItemsSource="{Binding Source={StaticResource FontStyleOptions}}"
                              ToolTip="Font Styles (e.g, italics)"
                              SelectedIndex="0"
                              SelectedItem="{Binding Notepad.DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5 0 0 0" Width="85">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontStyle="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox ItemsSource="{Binding Source={StaticResource FontWeightOptions}}"
                              ToolTip="Font Weight (e.g, bold)"
                              SelectedIndex="0"
                              SelectedItem="{Binding Notepad.DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5,0,0,0" Width="88">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontWeight="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox SelectedIndex="0"
                              ItemsSource="{Binding Source={StaticResource TextDeocrationOptions}}"
                              ToolTip="Text Decorations (e.g, underline, strikethrough)"
                              SelectedItem="{Binding Notepad.DocumentFormat.DecorationReadable, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5,0,0,0" Width="110">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextDecorations="{Binding Converter={StaticResource textDecoConverter}, FallbackValue=None}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <CheckBox x:Name="showLineThing"
                              Margin="5,0,0,0" Content="Show Line Border" 
                              ToolTip="The Border around the seleced line (aka caret index) of the text editor"
                              Height="Auto"
                              Checked="ShowLineThing_Checked" 
                              Unchecked="ShowLineThing_Checked" Width="117"/>
                    <CheckBox IsChecked="{Binding FileWatcherEnabled, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5,0,0,0" Content="Watch Files for Changes" 
                              ToolTip="Every few seconds, check the file contents of all notepad items and see if they've changed. It will only auto-update if you've made no changes to the file. if this is disabled, this will disable the check for EVERY notepad, not the current ones unfortunately"
                              Height="Auto"
                              Width="147"/>
                </StackPanel>
            </StackPanel>
            <DockPanel Margin="0,4,0,0" Background="{DynamicResource BackgroundColour}">
                <Expander ExpandDirection="Up" 
                          Header="Information/Errors and History"
                          VerticalAlignment="Bottom"
                          DockPanel.Dock="Bottom"
                          IsExpanded="False"
                          Margin="0 0 0 0">
                    <Grid Margin="-1 1 -1 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox DataContext="{Binding InformationView, UpdateSourceTrigger=PropertyChanged}" Height="180" Margin="0,0,4,0">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal" Height="24">
                                    <TextBlock Text="Application-wide information, statuses, errors and debug stuff" VerticalAlignment="Center"/>
                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="10 0"/>
                                    <Button Content="Clear List" Command="{Binding ClearInfoItemsCommand, Mode=OneTime}" ToolTip="Clear all info/warnings/errors" Width="75" Background="{DynamicResource ControlBrightDefaultBackground}" BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"/>
                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="10 0"/>
                                    <TextBlock Text="Items:" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding InformationItems.Count, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="3 0 0 0"/>

                                </StackPanel>
                            </GroupBox.Header>
                            <ListBox ItemsSource="{Binding InformationItems, UpdateSourceTrigger=PropertyChanged}"
                                     ap:HorizontalScrolling.UseHorizontalScrollingValue="True"
                                     HorizontalContentAlignment="Stretch">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <informationstuff:InformationItemControl DataContext="{Binding}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </GroupBox>
                        <GroupBox Height="180" DataContext="{Binding History}" 
                                      Grid.Column="1" Margin="0">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal" Height="24">
                                    <TextBlock Text="File History" VerticalAlignment="Center"/>
                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="10 0"/>
                                    <Button Content="Reopen last file" Command="{Binding ReopenLastFileCommand, Mode=OneTime}" ToolTip="Re-open the latest closed file" Width="100" Background="{DynamicResource ControlBrightDefaultBackground}" BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"/>
                                    <Button Content="Clear" Command="{Binding ClearItemsCommand, Mode=OneTime}" ToolTip="Clear the history" Margin="5 0 0 0" Width="60" Background="{DynamicResource ControlBrightDefaultBackground}" BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"/>
                                </StackPanel>
                            </GroupBox.Header>
                            <ListBox ItemsSource="{Binding HistoryItems, UpdateSourceTrigger=PropertyChanged}"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     HorizontalContentAlignment="Stretch">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <history:HistoryControl DataContext="{Binding}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </GroupBox>
                    </Grid>
                </Expander>
                <DockPanel Margin="0,0,0,2">
                    <Expander DockPanel.Dock="Right" ExpandDirection="Left" 
                              HorizontalAlignment="Right" Margin="2 0 0 0">
                        <Expander.Header>
                            <TextBlock Text="File Explorer" TextWrapping="NoWrap" FontSize="13">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <GroupBox Margin="1 -1 2 -1" 
                                  Header="File Explorer" 
                                  Background="{DynamicResource ContainerBackground}" 
                                  Width="200">
                            <Grid>
                                <TreeView Name="fileExplorerTree" 
                                          BorderBrush="{DynamicResource ContainerBackground}"
                                          ap:HorizontalScrolling.UseHorizontalScrollingValue="True">
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="Padding" Value="1,0,0,0"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ControlDefaultForeground}"/>
                                            <Setter Property="FocusVisualStyle" Value="{DynamicResource TreeViewItemFocusVisual}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton x:Name="Expander" 
                                                                          ClickMode="Press" 
                                                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                          Style="{DynamicResource ExpandCollapseToggleStyle}"/>
                                                            <Border x:Name="Bd" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                                    Background="{TemplateBinding Background}" 
                                                                    Grid.Column="1" 
                                                                    Padding="{TemplateBinding Padding}" 
                                                                    SnapsToDevicePixels="true">
                                                                <ContentPresenter x:Name="PART_Header"
                                                                                  ContentSource="Header" 
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Border>
                                                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsExpanded" Value="false">
                                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="HasItems" Value="false">
                                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlMouseOverBackground}"/>
                                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ControlMouseOverBorderBrush}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsSelected" Value="true">
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlSelectedBackground}"/>
                                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ControlSelectedBorderBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true"/>
                                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlDefaultBackground}"/>
                                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ControlDefaultBorderBrush}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                                    <Setter Property="ItemsPanel">
                                                        <Setter.Value>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel/>
                                                            </ItemsPanelTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.Resources>
                                        <HierarchicalDataTemplate DataType="{x:Type fileExplorerShell:FileSystemObjectInfo}" ItemsSource="{Binding Path=Children}">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                <Rectangle Margin="0 0 5 0" 
                                                           HorizontalAlignment="Left" 
                                                           Width="10" 
                                                           PreviewMouseMove="TreeViewItem_MouseMove" 
                                                           PreviewMouseLeftButtonDown="TreeViewItem_MouseDown"
                                                           ToolTip="Initiate DragDrop, allowing you to drop this item on your desktop or into the notepaditems list on the left" 
                                                           Cursor="SizeAll"
                                                           Visibility="{Binding Path=GripVisible, UpdateSourceTrigger=PropertyChanged}">
                                                    <Rectangle.Fill>
                                                        <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="{DynamicResource ControlBrightDefaultBackground}" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                                    <GeometryDrawing Brush="{DynamicResource ControlBrightDefaultBorderBrush}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Image Source="{Binding Path=ImageSource, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,3,0"/>
                                                <TextBlock Text="{Binding Path=FileSystemInfo.Name}" Foreground="{DynamicResource ControlDefaultForeground}"/>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.Resources>
                                </TreeView>
                            </Grid>
                        </GroupBox>
                    </Expander>
                    <DockPanel>
                        <Border Name="TopNotepadListBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="48" DockPanel.Dock="Top"
                                BorderBrush="{DynamicResource ControlDefaultBackground}" BorderThickness="2 2 2 0">
                            <Grid>
                                <ListBox ItemsSource="{Binding NotepadItems, UpdateSourceTrigger=PropertyChanged}"
                                         SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                                         SelectedItem="{Binding SelectedNotepadItem, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource HorizontalListbox}"
                                         ap:ListBoxBehaviour.ScrollOnNewItem="True"
                                         BorderThickness="0"
                                         x:Name="TopNotepadItemsListBox"
                                         VerticalContentAlignment="Stretch" 
                                         HorizontalContentAlignment="Left"
                                         ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                         ScrollViewer.CanContentScroll="False"
                                         ap:HorizontalScrolling.ForceHorizontalScrollingValue="True"
                                         ap:HorizontalScrolling.HorizontalScrollingAmountValue="3"
                                         AllowDrop="True" 
                                         Padding="0"
                                         Margin="0,0,140,0"
                                         Drop="NotepadItemsListBox_ItemsDropped"
                                         Background="{DynamicResource BackgroundColour}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <notepad:TopNotepadListItem DataContext="{Binding}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.InputBindings>
                                        <KeyBinding Command="{Binding CloseSelectedNotepadCommand, Mode=OneTime}" Gesture="Ctrl+Del"/>
                                    </ListBox.InputBindings>
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Sort by File Name" CommandParameter="fn" Command="{Binding SortListCommand, Mode=OneTime}" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                            <MenuItem Header="Sort by File Size" CommandParameter="fs" Command="{Binding SortListCommand, Mode=OneTime}" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="140">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Button Command="{Binding CloseAllNotepadsCommand, Mode=OneTime}"
                                            BorderThickness="0 0 0 0" 
                                            Content="Clear List" Grid.ColumnSpan="2"/>
                                    <Button Command="{Binding MoveItemCommand, Mode=OneTime}" CommandParameter="up"
                                            BorderThickness="0 0 0 0"  Content="Move Left"
                                            ToolTip="Move the selected NotepadItem upwards in the list" Grid.Row="1"/>
                                    <Button Command="{Binding MoveItemCommand, Mode=OneTime}" CommandParameter="down"
                                            BorderThickness="0 0 0 0" Content="Move Right"
                                            ToolTip="Move the selected NotepadItem downwards in the list" Grid.Row="1" Grid.Column="1"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <DockPanel>
                            <GroupBox HorizontalAlignment="Left" 
                                      Margin="0 0 5 0"
                                      Name="NotepadsListGroupbox"
                                      Width="225" 
                                      DockPanel.Dock="Left"
                                      Background="{DynamicResource BackgroundColour}">
                                <GroupBox.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Notepad Items" TextWrapping="NoWrap" VerticalAlignment="Center"/>
                                        <Separator Margin="3,0" Style="{DynamicResource VerticalSeparator}"/>
                                        <Button Command="{Binding RefreshFileContentsCommand, Mode=OneTime}" Content="Refresh File Contents" 
                                                ToolTip="Forces all files to re-fetch all their text from your system (if the file exists that is). Does nothing to items that have no path (that exists)" 
                                                Height="24" Width="119" ToolTipService.ShowDuration="12000"
                                                Background="{DynamicResource ControlBrightDefaultBackground}" 
                                                BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"/>
                                    </StackPanel>
                                </GroupBox.Header>
                                <Grid>
                                    <!-- ScrollViewer.CanContentScroll="False"  makes content scroll vertically by pixel not by content height -->
                                    <!-- crollViewer.HorizontalScrollBarVisibility="Disabled"  makes the items always fit the listbox width -->
                                    <ListBox ItemsSource="{Binding NotepadItems, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedItem="{Binding SelectedNotepadItem, UpdateSourceTrigger=PropertyChanged}"
                                             ap:ListBoxBehaviour.ScrollOnNewItem="True"
                                             x:Name="NotepadItemsListBox"
                                             HorizontalContentAlignment="Stretch" 
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                             ScrollViewer.CanContentScroll="False"
                                             AllowDrop="True" 
                                             Padding="0"
                                             Drop="NotepadItemsListBox_ItemsDropped" Margin="-1,-1,-1,68" 
                                             Background="{DynamicResource BackgroundColour}"
                                             BorderThickness="0">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <notepad:NotepadListItem DataContext="{Binding}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.InputBindings>
                                            <KeyBinding Command="{Binding CloseSelectedNotepadCommand, Mode=OneTime}" Gesture="Ctrl+Del"/>
                                        </ListBox.InputBindings>
                                        <ListBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Sort by File Name" CommandParameter="fn" Command="{Binding SortListCommand, Mode=OneTime}" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                <MenuItem Header="Sort by File Size" CommandParameter="fs" Command="{Binding SortListCommand, Mode=OneTime}" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                            </ContextMenu>
                                        </ListBox.ContextMenu>
                                    </ListBox>
                                    <Grid Margin="0,0,0,26" Height="42" VerticalAlignment="Bottom">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{Binding CloseAllNotepadsCommand, Mode=OneTime}"  Margin="0,0,75,0"
                                                BorderThickness="1 1 0 1" Focusable="False"
                                                Content="Clear List" Grid.RowSpan="2"/>
                                        <Button Command="{Binding MoveItemCommand, Mode=OneTime}" CommandParameter="up" Focusable="False"
                                                BorderThickness="1 1 1 1" Content="Move Up"
                                                ToolTip="Move the selected NotepadItem upwards in the list" HorizontalAlignment="Right" Width="75"/>
                                        <Button Command="{Binding MoveItemCommand, Mode=OneTime}" CommandParameter="down" Focusable="False"
                                                BorderThickness="1 0 1 1" Content="Move Down"
                                                ToolTip="Move the selected NotepadItem downwards in the list" HorizontalAlignment="Right" Width="75" Grid.Row="1"/>
                                    </Grid>
                                    <Grid VerticalAlignment="Bottom" Height="23">
                                        <TextBox Text="{Binding ToFindItemText, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" TextWrapping="NoWrap" Padding="1" VerticalAlignment="Stretch" Margin="0,0,23,0" BorderThickness="1 1 0 1">
                                            <TextBox.InputBindings>
                                                <KeyBinding Key="Enter" Command="{Binding FindNotepadItemCommand, Mode=OneTime}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>
                                        <Button Command="{Binding FindNotepadItemCommand, Mode=OneTime}" HorizontalAlignment="Right" Width="23" Focusable="False">
                                            <Image Margin="1" Source="/SharpPad;component/Resources/findReplace.png"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </GroupBox>
                            <GroupBox Focusable="True" FocusManager.IsFocusScope="True" Margin="0,0,0,0" 
                                      IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}">
                                <GroupBox.Header>
                                    <StackPanel Orientation="Horizontal" Height="24" Margin="-6 0 0 0">
                                        <Button Command="{Binding AutoShowLeftTabsCommand, Mode=OneTime}"
                                                IsEnabled="True"
                                                BorderBrush="Transparent" Background="Transparent"
                                                ToolTip="Show or close the left notepad items tab"  
                                                Focusable="False" Width="24" Margin="0 0 2 0">
                                            <Image Margin="1" Source="{Binding LeftTabsExpanded, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource LeftPaneOpenedToImageSourceConverter}}"/>
                                        </Button>
                                        <Button Command="{Binding AutoShowTopTabsCommand, Mode=OneTime}"
                                                IsEnabled="True"
                                                BorderBrush="Transparent" Background="Transparent"
                                                ToolTip="Show or close the top notepad items tab"  
                                                Focusable="False" Width="24" Margin="0 0 5 0">
                                            <Image Margin="1" Source="{Binding TopTabsExpanded, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TopPaneOpenedToImageSourceConverter}}"/>
                                        </Button>
                                        <TextBlock Text="Text Input" VerticalAlignment="Center"/>
                                        <Separator Style="{DynamicResource VerticalSeparator}" Margin="5,0"/>
                                        <Button Background="Transparent" Command="ApplicationCommands.Cut" ToolTip="Cut (Selected Text)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="24">
                                            <Image Source="/SharpPad;component/Resources/cut.png"/>
                                        </Button>
                                        <Button Background="Transparent" Command="ApplicationCommands.Copy" ToolTip="Copy (Selected Text)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="32">
                                            <Image Source="/SharpPad;component/Resources/copy.png"/>
                                        </Button>
                                        <Button Background="Transparent" Command="ApplicationCommands.Paste" ToolTip="Paste (From Clipboard)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="32">
                                            <Image Source="/SharpPad;component/Resources/paste.png"/>
                                        </Button>
                                        <Button Background="Transparent" Command="ApplicationCommands.Undo" ToolTip="Undo (Last Edit)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="26">
                                            <Image Source="/SharpPad;component/Resources/undo.png"/>
                                        </Button>
                                        <Button Background="Transparent" Command="ApplicationCommands.Redo" ToolTip="Redo (Last Edit)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,0,0" Focusable="False" Width="26">
                                            <Image Source="/SharpPad;component/Resources/redo.png"/>
                                        </Button>
                                        <CheckBox Margin="5,0,0,0" Content="Wrap" 
                                                 ToolTip="Text Wrapping: stops text exceeding the max width of textbox, aka never have to horizontally scroll."
                                                 IsChecked="{Binding Notepad.DocumentFormat.IsWrapped, UpdateSourceTrigger=PropertyChanged}" 
                                                 Height="Auto" Width="50"/>
                                        <CheckBox Margin="5,2,0,2" Content="Auto-Word Select" 
                                              IsChecked="{Binding AutoWordSelection, ElementName=MainTextBox}"
                                              ToolTip="Auto-select words when you select text" Width="114"/>
                                        <CheckBox Margin="5,2,0,2" Content="Word Counter" 
                                                  IsChecked="{Binding Notepad.Document.UseWordCount, UpdateSourceTrigger=PropertyChanged}"
                                                  ToolTip="Auto-select words when you select text" Width="114"/>
                                    </StackPanel>
                                </GroupBox.Header>
                                <Grid Margin="0,0,0,0">
                                    <Grid>
                                        <Border Background="Transparent" Margin="0,0,0,20" BorderThickness="0">
                                            <DockPanel>
                                                <!--
                                                <Border Background="{DynamicResource ContainerBackground}" 
                                                        BorderBrush="{DynamicResource ControlDefaultBorderBrush}" 
                                                        BorderThickness="1 1 1 1" Width="auto" MinWidth="20"
                                                        Visibility="Visible" Margin="0,0,0,3">
                                                    <TextBlock DataContext="{Binding Notepad, UpdateSourceTrigger=PropertyChanged}" 
                                                               HorizontalAlignment="Left" DockPanel.Dock="Left"
                                                               FontFamily="{Binding DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}"
                                                               FontSize="{Binding DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                                                               FontStyle="{Binding DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                                                               FontWeight="{Binding DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                                                               TextDecorations="{Binding DocumentFormat.Decoration, UpdateSourceTrigger=PropertyChanged}"
                                                               Text="{Binding LinesCounter.LineCounterText, UpdateSourceTrigger=PropertyChanged}"/>
                                                </Border>
                                                -->
                                                <Grid x:Name="editorGrid" Margin="0,0,0,3">
                                                    <!-- Line Numbers. This way is also too laggy
                                                        <TextBlock Text="{Binding (utils:TextBoxLineNumbers.BindableLineCount), ElementName=MainTextBox}" 
                                                                   FontFamily="{Binding Notepad.DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontSize="{Binding Notepad.DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontStyle="{Binding Notepad.DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontWeight="{Binding Notepad.DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                                                                   TextDecorations="{Binding Notepad.DocumentFormat.Decoration, UpdateSourceTrigger=PropertyChanged}"
                                                                   TextWrapping="{Binding Notepad.DocumentFormat.Wrap, UpdateSourceTrigger=PropertyChanged}"
                                                                   HorizontalAlignment="Left" DockPanel.Dock="Left" 
                                                                   MinWidth="16" TextAlignment="Center" Margin="2 0"/>
                                                        -->
                                                    <se:TextEditor 
                                                        x:Name="MainTextBox"
                                                        FontFamily="{Binding Notepad.DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}"
                                                        FontSize="{Binding Notepad.DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                                                        FontStyle="{Binding Notepad.DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                                                        FontWeight="{Binding Notepad.DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                                                        TextDecorations="{Binding Notepad.DocumentFormat.Decoration, UpdateSourceTrigger=PropertyChanged}"
                                                        TextWrapping="{Binding Notepad.DocumentFormat.Wrap, UpdateSourceTrigger=PropertyChanged}"
                                                        Text="{Binding Notepad.Document.Text, UpdateSourceTrigger=PropertyChanged}"
                                                        IsReadOnly="{Binding Notepad.DocumentFormat.IsReadOnly, UpdateSourceTrigger=PropertyChanged}"
                                                        AutoWordSelection="False"
                                                        IsInactiveSelectionHighlightEnabled="True"
                                                        AcceptsReturn="True"
                                                        AcceptsTab="True"
                                                        SpellCheck.SpellingReform="Postreform"
                                                        Language="en"
                                                        UndoLimit="1000"
                                                        ap:HorizontalScrolling.UseHorizontalScrollingValue="True"
                                                        ScrollViewer.PanningMode="VerticalFirst"
                                                        ScrollViewer.CanContentScroll="False"
                                                        HorizontalScrollBarVisibility="Visible"
                                                        VerticalScrollBarVisibility="Visible"
                                                        BorderThickness="0"
                                                        Background="{DynamicResource BackgroundColour}"
                                                        Focusable="True" 
                                                        Visibility="Visible" 
                                                        PreviewMouseWheel="TextBox_MouseWheel"
                                                        SelectionChanged="MainTextBox_SelectionChanged"
                                                        SizeChanged="MainTextBox_SizeChanged"
                                                        ScrollViewer.ScrollChanged="MainTextBox_ScrollChanged">
                                                        <se:TextEditor.ContextMenu>
                                                            <ContextMenu OverridesDefaultStyle="False">
                                                                <MenuItem Header="Cut"   Command="ApplicationCommands.Cut"   Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <MenuItem Header="Copy"  Command="ApplicationCommands.Copy"  Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <MenuItem Header="Paste" Command="ApplicationCommands.Paste" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                                                                <MenuItem Header="Undo"  Command="ApplicationCommands.Undo" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <MenuItem Header="Redo" InputGestureText="Ctrl+Shift+Z or Ctrl+Y" Command="ApplicationCommands.Redo" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                            </ContextMenu>
                                                        </se:TextEditor.ContextMenu>
                                                        <se:TextEditor.InputBindings>
                                                            <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="ApplicationCommands.Redo"/>
                                                        </se:TextEditor.InputBindings>
                                                    </se:TextEditor>
                                                    <Border x:Name="aditionalSelection"
                                                            BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"
                                                            Opacity="0.7"
                                                            BorderThickness="2"
                                                            CornerRadius="2"
                                                            HorizontalAlignment="Stretch" 
                                                            VerticalAlignment="Stretch" 
                                                            Margin="Infinity"
                                                            IsHitTestVisible="False"/>
                                                </Grid>
                                            </DockPanel>
                                        </Border>
                                        <DockPanel Height="20" VerticalAlignment="Bottom">
                                            <Grid DataContext="{Binding Notepad, UpdateSourceTrigger=PropertyChanged}" Width="55">
                                                <Border Background="{DynamicResource BackgroundColour}" BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="1"/>
                                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Width="50" Margin="4,3,0,3" Height="14" ToolTip="CTRL + Scrollwheel to zoom. also, this is just the fontsize.">
                                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="Zoom:" FontSize="10.5"/>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}" Margin="31,0,0,0" FontSize="10" Height="14"/>
                                                </Grid>
                                            </Grid>
                                            <Grid DockPanel.Dock="Right" HorizontalAlignment="Right" >
                                                <Border Background="{DynamicResource BackgroundColour}" 
                                                        BorderBrush="{DynamicResource ControlDefaultBorderBrush}" 
                                                        BorderThickness="0 1 1 1"/>
                                                <DockPanel Margin="0 1 1 1">
                                                    <TextBlock Text="Words" VerticalAlignment="Center" Padding="0 0 2 0" Margin="2 0 0 0" ToolTip="Number of words (aka lettes separated by spaces)" Visibility="{Binding Notepad.Document.UseWordCount, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                    <TextBlock Text="{Binding Notepad.Document.WordCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Padding="0 0 2 0" Margin="2 0 0 0" ToolTip="Number of words (aka lettes separated by spaces)" Visibility="{Binding Notepad.Document.UseWordCount, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                    <TextBlock Text="Line" VerticalAlignment="Center" Padding="0 0 2 0" Margin="2 0 0 0" ToolTip="Line Number"/>
                                                    <TextBlock Text="{Binding Line, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="0 0 5 0" ToolTip="Line Number"/>
                                                    <TextBlock Text="Column" VerticalAlignment="Center" Padding="0 0 2 0" ToolTip="Caret index within current line"/>
                                                    <TextBlock Text="{Binding Column, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" ToolTip="Caret index within current line"/>
                                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="5 2" Width="1"/>
                                                    <TextBlock Text="{Binding Notepad.Document.FileName, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FileExtensionNameConverter}}" 
                                                               VerticalAlignment="Center" Margin="0 0 5 0" ToolTip="File Extension"/>
                                                </DockPanel>
                                            </Grid>
                                            <Grid>
                                                <Border Background="{DynamicResource BackgroundColour}" 
                                                        BorderBrush="{DynamicResource ControlDefaultBorderBrush}" 
                                                        BorderThickness="0 1 1 1"/>
                                                <TextBlock Text="Path:" 
                                                           HorizontalAlignment="Left" 
                                                           Margin="2 0 0 0" 
                                                           VerticalAlignment="Center"/>
                                                <TextBox VerticalAlignment="Center" Background="Transparent"
                                                         Margin="33,1,2,2"
                                                         BorderBrush="Transparent"
                                                         Height="17"
                                                         Text="{Binding Notepad.Document.FilePath, UpdateSourceTrigger=PropertyChanged}"/>
                                            </Grid>
                                        </DockPanel>
                                    </Grid>
                                    <Grid Visibility="{Binding FindViewVisibility, UpdateSourceTrigger=PropertyChanged, FallbackValue=Visible}" 
                                          HorizontalAlignment="Right" VerticalAlignment="Top" Height="65" Width="385" 
                                          Margin="0,0,27,0" Background="{DynamicResource ContainerBackground}"
                                          FocusManager.IsFocusScope="True" RenderOptions.BitmapScalingMode="HighQuality">
                                        <Grid.BitmapEffect>
                                            <DropShadowBitmapEffect Opacity="0.5" ShadowDepth="4"/>
                                        </Grid.BitmapEffect>
                                        <Grid DataContext="{Binding Find, UpdateSourceTrigger=PropertyChanged}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1*"/>
                                                <RowDefinition Height="1*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid>
                                                <TextBox Focusable="True" Text="{Binding FindWhatText, UpdateSourceTrigger=PropertyChanged}" 
                                                         Padding="2 4" Margin="4,4,262,2" BorderThickness="1" Name="findBox" ToolTip="Find"
                                                         VerticalContentAlignment="Center" 
                                                         Background="{DynamicResource ControlDefaultBackground}" 
                                                         BorderBrush="{DynamicResource ControlDefaultBorderBrush}"
                                                         GotFocus="findBox_GotFocus">
                                                    <TextBox.InputBindings>
                                                        <KeyBinding Key="Enter" Command="{Binding HighlightNextMatchCommand, Mode=OneTime}"/>
                                                    </TextBox.InputBindings>
                                                </TextBox>
                                                <Button Focusable="False" Command="{Binding FindOccourancesCommand, Mode=OneTime}"
                                                        HorizontalAlignment="Right" Margin="0,4,234,2" Width="28" 
                                                        Background="{DynamicResource ContainerBackground}" BorderThickness="0 1 0 1"
                                                        ToolTip="Search">
                                                    <Image Source="/SharpPad;component/Resources/findReplace.png" Margin="-1" />
                                                </Button>
                                                <ToggleButton Focusable="False" IsChecked="{Binding MatchCase, UpdateSourceTrigger=PropertyChanged}"  
                                                              HorizontalAlignment="Right" Margin="0,4,206,2" Width="28" 
                                                              Background="{DynamicResource ContainerBackground}" BorderThickness="0 1 0 1"
                                                              ToolTip="Case Sensitive">
                                                    <Image Source="/SharpPad;component/Resources/matchCaseIcon.png" Margin="-1" />
                                                </ToggleButton>
                                                <ToggleButton Focusable="False" IsChecked="{Binding MatchWholeWord, UpdateSourceTrigger=PropertyChanged}" 
                                                              HorizontalAlignment="Right" Margin="0,4,179,2" Width="27" Background="{DynamicResource ContainerBackground}" 
                                                              BorderThickness="0 1 1 1" ToolTip="Match whole words (searching for 'ab', 'abc' returns false, but 'ab c' returns true)">
                                                    <Image Source="/SharpPad;component/Resources/matchWholeWordIcon.png" Margin="-1" />
                                                </ToggleButton>
                                                <StackPanel Orientation="Horizontal" Margin="0,4,83,2" HorizontalAlignment="Right" Width="91">
                                                    <TextBlock Text="{Binding Position, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}" 
                                                               Padding="2 5" HorizontalAlignment="Left"/>
                                                    <TextBlock Text="of" Padding="2 5" HorizontalAlignment="Left"/>
                                                    <TextBlock Text="{Binding FoundItems.Count, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}"
                                                               Padding="2 5" HorizontalAlignment="Left"/>
                                                </StackPanel>
                                                <Button Focusable="False" Command="{Binding HighlightPreviousMatchCommand, Mode=OneTime}" 
                                                        Background="Transparent" BorderBrush="Transparent" Margin="0,4,57,2" 
                                                        HorizontalAlignment="Right" Width="26" ToolTip="Highlight previously found item">
                                                    <Image Source="/SharpPad;component/Resources/upIcon.png" Margin="-1" />
                                                </Button>
                                                <Button Focusable="False" Command="{Binding HighlightNextMatchCommand, Mode=OneTime}" Background="Transparent" 
                                                        BorderBrush="Transparent" Margin="0,4,31,2" HorizontalAlignment="Right" Width="26"
                                                        ToolTip="Highlight next item">
                                                    <Image Source="/SharpPad;component/Resources/downIcon.png" Margin="-1" />
                                                </Button>
                                                <Button Command="{Binding CancelCommand, Mode=OneTime}" Background="Transparent" BorderBrush="Transparent"
                                                        HorizontalAlignment="Right" Width="26" Margin="0,4,5,2" ToolTip="Hide the find tab">
                                                    <TextBlock Text="X" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" FontSize="16" Foreground="#FFFA1919" Height="22"/>
                                                </Button>
                                            </Grid>
                                            <Grid Grid.Row="1">
                                                <TextBox Focusable="True" Text="{Binding ReplaceWithText, UpdateSourceTrigger=PropertyChanged}"
                                                         Padding="2 4" Margin="4,2,179,4" VerticalContentAlignment="Center" ToolTip="Replace" 
                                                         Background="{DynamicResource ControlDefaultBackground}" 
                                                         BorderBrush="{DynamicResource ControlDefaultBorderBrush}">
                                                    <TextBox.InputBindings>
                                                        <KeyBinding Key="Enter" Command="{Binding ReplaceNextCommand, Mode=OneTime}"/>
                                                    </TextBox.InputBindings>
                                                </TextBox>
                                                <Button Focusable="False" Command="{Binding ReplaceNextCommand, Mode=OneTime}" Background="Transparent" 
                                                        BorderBrush="Transparent" Margin="0,2,148,4" HorizontalAlignment="Right" Width="26"
                                                        ToolTip="Replace the currently selected word and then select the next word">
                                                    <Image Source="/SharpPad;component/Resources/replaceIcon.png" Margin="-1" />
                                                </Button>
                                                <Button Focusable="False" Command="{Binding ReplaceAllCommand, Mode=OneTime}" Background="Transparent" 
                                                        BorderBrush="Transparent" Margin="0,2,117,4" HorizontalAlignment="Right" Width="26"
                                                        ToolTip="Replace ALL">
                                                    <Image Source="/SharpPad;component/Resources/replaceAllIcon.png" Margin="-1" />
                                                </Button>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </GroupBox>
                        </DockPanel>
                    </DockPanel>
                </DockPanel>
            </DockPanel>
        </DockPanel>
    </Grid>
</Window>
